# doctest 0-add_integer.txt
======================
Using ``add_integer``
======================
-------------------
``add_integer(a, b=98)``

File: ``0-add_integer.py``
Import the function:

    >>> add_integer = __import__('0-add_integer').add_integer

Tests to realize:

    >>> add_integer(56, 5)
    61

    >>> add_integer(-5, 19)
    14

    >>> add_integer(56, 'hello')
    Traceback (most recent call last):
                ...
    TypeError: b must be an integer

    >>> add_integer('world', 6)
    Traceback (most recent call last):
                ...
    TypeError: a must be an integer

    >>> add_integer(25.5, 58.2)
    83

    >>> add_integer()
    Traceback (most recent call last):
                ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
                ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer(3554e5455)
    Traceback (most recent call last):
                ...
    OverflowError: cannot convert float infinity to integer
